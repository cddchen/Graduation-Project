//judge DAxDE*BCxBE>=0
a1 = 1.0 * (Q.y - P.y) * (box[0].x - box[3].x) - 1.0 * (Q.x - P.x) * (box[0].y - box[3].y);
b1 = 1.0 * (P.y - box[3].y) * (box[0].x - box[3].x) - 1.0 * (P.x - box[3].x) * (box[0].y - box[3].y);
a2 = 1.0 * (Q.y - P.y) * (box[2].x - box[1].x) - 1.0 * (Q.x - P.x) * (box[2].y - box[1].y);
b2 = 1.0 * (P.y - box[1].y) * (box[2].x - box[1].x) - 1.0 * (P.x - box[1].x) * (box[2].y - box[1].y);
delta = 1.0 * (a1 * b2 + a2 * b1) * (a1 * b2 + a2 * b1) - 4.0 * a1 * a2 * b1 * b2;
if (delta < 0 || a1 * a2 == 0) return false;
if (a1 == 0 && a2 == 0) {
    if (b1 * b2 < 0)
        return false;
}
else if (a1 == 0) {
    double tmp = -1.0 * b2 / a2;
    if (a2 > 0) t1 = max(t1, tmp);
    else t2 = min(t2, tmp);
}
else if (a2 == 0) {
    double tmp = -1.0 * b1 / a1;
    if (a1 > 0) t1 = max(t1, tmp);
    else t2 = min(t2, tmp);
}
else {
    double x1 = (-1.0 * (a1 * b2 + a2 * b1) - sqrt(delta)) / (2.0 * a1 * a2);
    double x2 = (-1.0 * (a1 * b2 + a2 * b1) + sqrt(delta)) / (2.0 * a1 * a2);
    if (x1 > x2) swap(x1, x2);
    t1 = max(t1, x1);
    t2 = min(t2, x2);
}
if (t1 <= t2) return true;
return false;